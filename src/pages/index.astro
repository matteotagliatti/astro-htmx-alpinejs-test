---
import fs from "node:fs";

try {
  fs.accessSync("/tmp/count.txt");
} catch {
  fs.writeFileSync("/tmp/count.txt", "0");
}

const count = fs.readFileSync("/tmp/count.txt", "utf-8");
import Counter from "../components/Counter.astro";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content="{Astro.generator}" />
    <title>Astro</title>
  </head>
  <body>
    <section class="first">
      <h1>
        HTMX Count: <span id="count">{count}</span>
      </h1>

      <button hx-post="/api/increment" hx-target="#count"> Increment</button>
      <button hx-post="/api/decrement" hx-target="#count"> Decrement</button>
    </section>

    <section>
      <h1>AlpineJS</h1>
      <!-- Note: no `client:load` necessary since AlpineJS is always included -->
      <Counter>
        <h1>Hello, AlpineJS!</h1>
      </Counter>

      <!-- Note: pass props to Astro components to initialize Alpine with a certain state -->
      <Counter initialCount={5}>
        <h2>Use Astro to pass in server-side props</h2>
      </Counter>
    </section>
  </body>
</html>

<script>
  import "htmx.org"; // import here to use in client only
</script>

<style>
  .first {
    margin-bottom: 10rem;
  }
</style>
